<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.travel.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.springboot.travel.pojo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="INTEGER" property="salt" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="guide_id" jdbcType="INTEGER" property="guideId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, username, head_portrait, password, salt, age, telephone, state, guide_id, 
    create_time, email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.travel.pojo.User">
    insert into user (user_id, username, head_portrait, 
      password, salt, age, 
      telephone, state, guide_id, 
      create_time, email)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{headPortrait,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, 
      #{telephone,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{guideId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.travel.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="headPortrait != null">
        head_portrait,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="guideId != null">
        guide_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="guideId != null">
        #{guideId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.travel.pojo.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="guideId != null">
        guide_id = #{guideId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.travel.pojo.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      guide_id = #{guideId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="selectUserList" resultMap="BaseResultMap">
    select *
    from user
  </select>

  <select id="selectUserPageList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from user
    limit #{page},#{size}
  </select>

  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where username like CONCAT('%',#{username},'%')
  </select>

  <select id="selectByTelephone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where telephone = #{telephone}
  </select>

</mapper>